    Question 1: Consider the following class:

        public class IdentifyMyParts {
            public static int x = 7;
            public int y = 3;
        } 

        Question 1a. What are the class variables?
        Answer 1a: x

        Question 1b. What are the instance variables?
        Answer 1b: y

        Question 1c. What is the output from the following code:

            IdentifyMyParts a = new IdentifyMyParts(); 
            IdentifyMyParts b = new IdentifyMyParts(); 
            a.y = 5; 
            b.y = 6; 
            a.x = 1; 
            b.x = 2; 
            System.out.println("a.y = " + a.y); 
            System.out.println("b.y = " + b.y); 
            System.out.println("a.x = " + a.x); 
            System.out.println("b.x = " + b.x); 
            System.out.println("IdentifyMyParts.x = " + IdentifyMyParts.x);

        Answer 1c: Here is the output:

             a.y = 5 
             b.y = 6 
             a.x = 2 
             b.x = 2
             IdentifyMyParts.x = 2

            Because x is defined as a public static int in the class IdentifyMyParts, every reference to x will have the value that was last assigned because x is a static variable (and therefore a class variable) shared across all instances of the class. That is, there is only one x: when the value of x changes in any instance it affects the value of x for all instances of IdentifyMyParts. 